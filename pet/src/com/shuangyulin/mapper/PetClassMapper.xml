<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.shuangyulin.mapper.PetClassMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加宠物类别记录 -->
	<insert id="addPetClass" parameterType="petClass">
		insert into t_petClass(petClassName) values 
		(#{petClassName})
	</insert>

	<!-- 按照查询条件分页查询宠物类别记录 -->
	<select id="queryPetClass" resultMap="petClassMap" >
		select t_petClass.* from t_petClass ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="petClassMap" type="petClass">
        <id property="petClassId" column="petClassId" />
    </resultMap>

    <!-- 按照查询条件查询所有宠物类别记录 -->
	<select id="queryPetClassList" resultMap="petClassMap" >
		select t_petClass.* from t_petClass ${where}
	</select>

    <!-- 按照查询条件的宠物类别记录数 -->
	<select id="queryPetClassCount" resultType="int">
		select count(*) from t_petClass ${where}
	</select>

	<!-- 根据主键查询某个宠物类别记录 -->
	<select id="getPetClass" parameterType="int" resultMap="petClassMap">
		select * from t_petClass where t_petClass.petClassId = #{petClassId}
	</select>

	<!-- 更新宠物类别记录 -->
	<update id="updatePetClass" parameterType="petClass">
		update t_petClass set petClassName=#{petClassName} where petClassId = #{petClassId}
	</update>

	<!-- 删除宠物类别记录 -->
	<delete id="deletePetClass" parameterType="int">
		delete from t_petClass where petClassId=#{petClassId}
	</delete>

</mapper>
